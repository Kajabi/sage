/* ==================================================
  ** _functions.scss

================================================== */


/* ==================================================
** Integer (pixel) to rem function
  Usage: `rem(12)`

  Converts an integer to a rem value based on 16 as the base size.
  arguments: $value | [integer]
================================================== */

@function rem($value) {
  @return strip-unit($value) / 16 * 1rem;
}


/* ==================================================
** Strip units from value
  Usage: `strip-unit(12px)`

  Converts an integer to a rem value based on 16 as the base size.
  <https://css-tricks.com/snippets/sass/strip-unit-function/>
    arguments: {Number} $number - Number to remove unit from
    @return {Number} - Unitless number
================================================== */

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  
  @return $number;
}

/* ==================================================
** Generates a value based on the baseline grid
  Usage: `baseline(5)`

  Given a baseline grid and a number of units, this function
  returns the product, resulting in the equivalent of that
  number of baselines' dimension.
    arguments:
    {Number} $num - Unitless number of baseline units
    {Number} $baseline - The baseline grid value
    @return {Number} - Product of the arguments
================================================== */

$default-baseline: rem(4px) !default;

@function baseline($num: 2, $baseline: $default-baseline) {
  @return $num * $baseline;
}


/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

@function position-print-value($key, $value) {
  @if not $value {
    @error "position() mixin requires all 4 position values (top, right, bottom, left): #{$key} is missing or invalid.";
  }
  @else if $value != unset {
    @return $value;
  }
  @else {
    @return null;
  }
}
