// ============================================
// Variables
// ============================================

$sage-switch-color-default: sage-color(grey, 400);
$sage-switch-color-checked: sage-color(primary);
$sage-switch-color-disabled: sage-color(grey, 200);
$sage-switch-border-radius: 1rem;
$sage-switch-toggle-size: 1.125rem;
$sage-switch-focus-outline-size: sage-spacing(2xs);
$sage-switch-focus-outline-width: 1;
$sage-switch-focus-outline-color: currentColor;

/*------------------------------------*/
/*-- switch element */
/*------------------------------------*/
.sage-switch {
  input[type="checkbox"] {
    appearance: none;
    background: $sage-switch-color-default;
    border-radius: $sage-switch-border-radius;
    color: $sage-switch-color-default;
    cursor: pointer;
    display: inline-block;
    height: 1.5rem;
    margin: 0;
    outline: none;
    position: relative;
    transition: 0.3s, border-color 0.3s, box-shadow 0.2s;
    vertical-align: top;
    width: 2.75rem;

    & + label {
      cursor: pointer;
      display: inline-block;
      font-size: sage-font-size();
      line-height: sage-font-height();
      margin-left: sage-spacing(2xs);
      vertical-align: top;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
      left: 50%;
      top: 50%;
      display: block;
    }

    &::before {
      width: calc(100% + ((#{$sage-switch-focus-outline-width}px ) + (#{$sage-switch-focus-outline-size} * 2)));
      height: calc(100% + ((#{$sage-switch-focus-outline-width}px) + (#{$sage-switch-focus-outline-size} * 2)));
      border: calc(#{$sage-switch-focus-outline-width}px) solid $sage-switch-focus-outline-color;
      border-radius: $sage-switch-border-radius;
      pointer-events: none;
      opacity: 0;
      transform: translate3d(-50%, -50%, 0) scale(0.94);
      transition: opacity 0.15s ease-out 0.05s, transform 0.2s ease-in-out;
    }

    &::after {
      background: #fff;
      border-radius: sage-border(radius-round);
      height: $sage-switch-toggle-size;
      transform: translate3d(-100%, -50%, 0);
      transition: transform 0.2s ease-out;
      width: $sage-switch-toggle-size;
    }

    // checked
    &:checked {
      color: $sage-switch-color-checked;
      background: $sage-switch-color-checked;

      &::after {
        transform: translate3d(0, -50%, 0);
      }
    }

    // disabled
    &:disabled {
      background: $sage-switch-color-disabled;
      cursor: not-allowed;
      opacity: 0.5;

      // disabled & checked
      &:checked {
        background: $sage-switch-color-disabled;
      }

      & + label {
        color: $sage-switch-color-default;
        cursor: not-allowed;
      }
    }

    // hover
    &:hover {
      &:not(:checked) {
        &:not(:disabled) {
          box-shadow: sage-shadow(sm);
        }
      }
    }

    &:focus,
    &:active {
      &::before {
        opacity: 1;
        transform: translate3d(-50%, -50%, 0);
      }
    }

    &:disabled:not(:checked) {
      &::after {
        background: #fff;
      }
    }
  }
}