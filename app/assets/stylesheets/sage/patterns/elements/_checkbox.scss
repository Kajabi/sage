/* ==================================================
  ** _checkbox.scss
  type: element


================================================== */

.sage-checkbox {
  input[type="checkbox"] {
    appearance: none;
    display: inline-block;
    position: relative;
    height: $sage-checkbox-size;
    width: $sage-checkbox-size;
    margin: 0;
    vertical-align: top;
    color: $sage-checkbox-color-default;
    border: 1px solid $sage-checkbox-color-default;
    border-radius: $sage-checkbox-border-radius;
    outline: none;
    transition: background $sage-checkbox-transition, box-shadow $sage-checkbox-transition, border $sage-checkbox-transition;
    cursor: pointer;

    + label {
      display: inline-block;
      margin-left: sage-spacing(2xs);
      font-size: sage-font-size();
      line-height: sage-font-height();
      vertical-align: top;
      cursor: pointer;
    }

    &::before,
    &::after {
      content: "";
      display: block;
      position: absolute;
      left: 50%;
      top: 50%;
      transition: opacity 0.2s ease-in-out, transform $sage-checkbox-transition;
      opacity: 0;
    }

    // focus outline
    &::before {
      transform: translate3d(-50%, -50%, 0) scale(0.94);
      width: calc(100% + ((#{$sage-checkbox-focus-outline-width} * 1px ) + (#{$sage-checkbox-focus-outline-size} * 2)));
      height: calc(100% + ((#{$sage-checkbox-focus-outline-width} * 1px) + (#{$sage-checkbox-focus-outline-size} * 2)));
      border: calc(#{$sage-checkbox-focus-outline-width} * 1px) solid $sage-checkbox-focus-outline-color;
      border-radius: $sage-checkbox-border-radius;
      pointer-events: none;
      opacity: 0;
    }

    &::after {
      transform: translate3d(-50%, calc(-50% + #{$sage-checkbox-marker-offset}), 0) rotate($sage-checkbox-marker-rotate);
      height: $sage-checkbox-marker-height;
      width: $sage-checkbox-marker-width;
      border-right: $sage-checkbox-marker-border solid $sage-checkbox-marker-color;
      border-bottom: $sage-checkbox-marker-border solid $sage-checkbox-marker-color;
    }

    &:checked {
      color: $sage-checkbox-color-checked;
      background: $sage-checkbox-color-checked;
      border-color: $sage-checkbox-color-checked;
      box-shadow: sage-shadow(sm);

      &::after {
        transform: translate3d(-50%, calc(-50% - #{$sage-checkbox-marker-border} / 2), 0) rotate($sage-checkbox-marker-rotate);
        opacity: 1;
      }
    }

    &:hover {
      &:not(:checked) {
        &:not(:disabled) {
          border-color: sage-color(grey, 500);
          box-shadow: sage-shadow(sm);
        }
      }
    }

    &:focus:not(:disabled),
    &:active:not(:disabled) {
      &::before {
        transform: translate3d(-50%, -50%, 0) scale(1);
        opacity: 1;
      }
    }

    &:disabled {
      background: $sage-checkbox-color-disabled;
      cursor: not-allowed;
      opacity: 0.5;

      &::before {
        display: none;
      }

      // disabled & checked
      &:checked {
        background: $sage-checkbox-color-disabled-checked;
        border-color: $sage-checkbox-color-disabled-checked;
        box-shadow: none;
        opacity: 1;

        &::before {
          display: none;
        }
      }

      + label {
        color: $sage-checkbox-color-default;
        cursor: not-allowed;
      }
    }
  }
}
