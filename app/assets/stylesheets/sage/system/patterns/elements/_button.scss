/* ==================================================
  ** _button.scss
  type: element


================================================== */

// ==================================================
// MIXINS
// ==================================================

@mixin button-style-base {
  @include button-style-reset();
  @extend %t-sage-body-med;

  position: relative;
  padding: rem(12px) sage-spacing(sm);
  margin-left: sage-spacing(2xs);
  letter-spacing: $sage-btn-letter-spacing;
  color: sage-color(charcoal, 500);
  border: 0;
  border-radius: $sage-btn-border-radius;
  box-shadow: $sage-btn-shadow-base;
  transition: border $sage-btn-transition, background-color $sage-btn-transition, box-shadow $sage-btn-transition;
}

@mixin button-style-disabled {
  box-shadow: none;
  transition: none;
  cursor: not-allowed;

  &:hover:not(:focus):not(:active):not(:disabled):not(.disabled),
  &:focus,
  &:active {
    outline: none;
  }
}

// TODO: Re-evaluate whether these need to be "on" these elements by default.
button,
input[type="submit"],
input[type="search"] {
  .sage-type & {
    @include button-style-base;
  }
}

.sage-btn {
  @include button-style-base;

  &:first-of-type {
    margin-left: 0;
  }

  &::after {
    content: "";
    display: inline-block;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate3d(-50%, -50%, 0) scale(0.94);
    width: calc(100% + #{$sage-btn-focus-outline-width * 2px} + #{$sage-btn-focus-outline-spacing * 2});
    height: calc(100% + #{$sage-btn-focus-outline-width * 2px} + #{$sage-btn-focus-outline-spacing * 2});
    border: ($sage-btn-focus-outline-width * 1px) solid $sage-btn-focus-outline-color;
    border-radius: sage-border(radius-large);
    transition: opacity 0.15s ease-out 0.05s, transform 0.2s ease-in-out;
    pointer-events: none;
    opacity: 0;
  }

  &:focus {
    box-shadow: $sage-btn-shadow-base;
    outline: none;
  }

  &:focus:not(:disabled):not(.disabled),
  &:active:not(:disabled):not(.disabled) {
    &::after {
      transform: translate3d(-50%, -50%, 0) scale(1);
      opacity: 1;
    }
  }

  &:active {
    color: sage-color(charcoal, 400);
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    @include button-style-disabled;

    color: sage-color(grey);
    background-color: sage-color(grey, 100);
  }
}

.sage-btn--small {
  padding-top: calc(#{sage-spacing(xs)} + #{rem(1px)}); // adds 1px to offset odd line-height #
  padding-bottom: sage-spacing(xs);
  font-size: sage-font-size(sm);
}

.sage-btn--full-width {
  width: 100%;
}

.sage-btn--primary {
  color: $sage-btn-primary-text-color;
  background-color: $sage-btn-primary-bg-color;

  &::after {
    border-color: $sage-btn-primary-bg-color;
  }

  &:hover:not(:focus):not(:active):not(:disabled):not(.disabled),
  &:focus,
  &:active {
    color: $sage-btn-primary-text-color;
  }

  &:hover:not(:focus):not(:active):not(:disabled):not(.disabled) {
    background-color: lighten($sage-btn-primary-bg-color, 9%);
  }

  &:focus {
    background-color: $sage-btn-primary-bg-color;
    box-shadow: $sage-btn-shadow-base;
  }

  &:active {
    background-color: darken($sage-btn-primary-bg-color, 11%);
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    @include button-style-disabled;

    color: sage-color(primary, 200);
    background-color: sage-color(primary, 100);
  }
}

.sage-btn--secondary {
  color: $sage-btn-secondary-text-color;
  background: sage-color(white);

  &::after {
    border-color: sage-color(primary);
  }

  &:hover:not(:focus):not(:active):not(:disabled):not(.disabled) {
    color: $sage-btn-secondary-text-color;
    box-shadow: $sage-btn-shadow-hover;
  }

  &:active {
    background-color: sage-color(grey, 200);
  }

  &:disabled,
  &.disabled {
    @include button-style-disabled;

    color: sage-color(grey, 400);
    background-color: sage-color(grey, 200);

    &:hover,
    &:focus,
    &:active {
      box-shadow: none;
    }
  }
}

.sage-btn--tertiary {
  color: $sage-btn-tertiary-text-color;
  background: sage-color(white);
  border: 0;
  box-shadow: none;

  &::after {
    border-color: sage-color(primary);
  }

  &:hover:not(:focus):not(:active):not(:disabled):not(.disabled) {
    color: $sage-btn-tertiary-text-color;
    background-color: sage-color(grey, 200);
  }

  &:focus {
    color: $sage-btn-tertiary-text-color;
    background: sage-color(white);
    box-shadow: none;
  }

  &:active {
    color: $sage-btn-tertiary-text-color;
    background-color: sage-color(grey, 300);
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    @include button-style-disabled;

    color: sage-color(primary, 200);
    background-color: transparent;
  }
}

.sage-btn--danger {
  color: $sage-btn-danger-text-color;
  background: $sage-btn-danger-bg-color;
  box-shadow: $sage-btn-shadow-base;

  &::after {
    z-index: sage-z-index();
    border-color: $sage-btn-danger-bg-color;
  }

  &:hover,
  &:focus,
  &:active {
    color: $sage-btn-danger-text-color;
  }

  &:hover:not(:focus):not(:active):not(:disabled):not(.disabled) {
    background-color: saturate(lighten($sage-btn-danger-bg-color, 6%), 5%);
    box-shadow: $sage-btn-shadow-hover;
  }

  &:focus {
    box-shadow: $sage-btn-shadow-base;
  }

  &:active {
    background-color: darken($sage-btn-danger-bg-color, 4%);
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    @include button-style-disabled;

    color: sage-color(red, 200);
    background-color: sage-color(red, 100);
  }
}

.sage-btn--link {
  box-shadow: none;

  &:focus,
  &:active,
  &:hover {
    box-shadow: none;
  }
}

.sage-btn--align-end {
  align-self: flex-end;
}

@mixin button-icon-generator($direction) {
  $right: null;

  @if $direction == right {
    $right: true;
  }
  @else if $direction == left {
    $right: false;
  }
  @else {
    @error "button-icon-generator() requires argument value of either `right` or `left`";
  }

  @each $icon-name, $icon-code in $sage-icons {
    .sage-btn--icon-#{if($right, "right", "left")}-#{$icon-name} {
      display: inline-flex;
      align-items: baseline;
      flex-direction: if($right, row-reverse, row);

      &::before {
        @include icon-base($icon-name);
        align-self: center;
        margin: if($right, 0 0 0 sage-spacing(xs), 0 sage-spacing(xs) 0 0);
      }
    }
  }
}

@include button-icon-generator(left);
@include button-icon-generator(right);
