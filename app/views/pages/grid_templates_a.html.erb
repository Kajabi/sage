<%
grid_patterns = [
  {
    group_name: "Equal sized columns",
    group_desciption: "",
    members: {
      m:  "--",
      o:  "---",
      mm: "----",
      mo: "-----",
    }
  },
  {
    group_name: "Dots first",
    group_desciption: "",
    members: {
      a: ".-",
      w: ".--",
      j: ".---",
      u: "..-",
      im: "..--",
      io: "..---",
      v: "...-",
      sm: "...--",
      so: "...---"
    }
  },
  {
    group_name: "Dots last",
    group_desciption: "",
    members: {
      n: "-.",
      g: "--.",
      oe: "---.",
      d: "-..",
      z: "--..",
      oi: "---..",
      b: "-...",
      ms: "--...",
      os: "---..."
    }
  },
  {
    group_name: "Dots on both sides",
    group_desciption: "",
    members: {
      r: ".-.",
      p: ".--.",
      fe: ".---.",
      l: ".-..",
      wi: ".--..",
      ji: ".---..",
      f: "..-.",
      ig: "..--.",
      ug: "..---.",
      ui: "..-..",
      un: "..--.."
    }
  }
]

dashes = [
  %(
    <div class="sage-card__block">
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
    </div>
  ),
  %(
    <div class="sage-card__block">
      <p>Proin aliquam tortor eget tortor suscipit blandit nunc sed.</p>
    </div>
  ),
  %(
    <div class="sage-card__block">
      <p>Sed a tortor magna sed consectetur, sapien eget consequat.</p>
    </div>
  ),
  %(
    <div class="sage-card__block">
      <p>Phasellus semper nisi metus, vel pulvinar risus hendrerit non.</p>
    </div>
  ),
  %(
    <div class="sage-card__block">
      <p>Integer nec ultricies nibh. Aenean sit amet faucibus massa.</p>
    </div>
  )
]

dots = [
  %(
    <i class="sage-icon-check-circle"></i>
  ),
  %(
    <span class="sage-label sage-label--draft">In progress</span>
  ),
  %(
    <i class="sage-icon-star"></i>
  ),
  %(
    <span class="sage-label sage-label--success">Verified</span>
  ),
  %(
    <span class="t-sage-body-small-semi">$5.99</span>
  ),
  %(
    <i class="sage-icon-dot-menu-horizontal"></i>
  )
]
%>

<%= content_for :heading do %>
  <h1>Grid Templates</h1>
  <p>Easily create row layouts with our library of grid templates.</p>
<% end %>

<div class="sage-type">
  <h2>Overview</h2>
  <p>
    In order to make inline or row-based layouts simple and easy
    to build on the fly we've set up a number of template sets that
    employ CSS Grid templates.
    This means that you can add one of the grid template classes below
    onto any row-based layout element such as card rows or panel rows
    and the elements within will conform in a snap.
  </p>
  <p>The method we employ sees layouts as being composed of one of two kinds of elements:</p>
  <ul>
    <li>
      Fixed elements -- these have a small instrinsic size, and they space they occupy fits
      snugly around them. Think of icons, small text labels, and option menu triggers.
    </li>
    <li>
      Flexing elements -- these are allowed to span wider and fill space that remains after
      fixed elements's sizes are accounted for. This means they may not always naturally fill
      this space, but can flow within the bounds of this space. Think of text that may be of
      varied size but can span between other fixed elements.
    </li>
  </ul>
  <p>
    Since naming a series of abstract patterns is challenging to do in a way that is anything
    more than an enumerated list, we decided to use Morse Code as a base.
    As each letter in Morse Code is composed of a series of dots and dashes, so our layouts are
    composed of a series of fixed and flexing elements. So if fixed elements are "dots" and
    flexing elements are "dashes" we can easily analyze a layout to extract a "Morse-like" pattern.
  </p>

  <h2>Patterns</h2>
  <p class="t-sage-body-semi t-sage--color-red">
    TEMP NOTE FOR REVIEWERS: This approach aims to use actual Morse letters wherever possible
    to keep the unique pattern names shorter.
    However, this means that referring to a chart like this will be necessary for most folks
    who do not have Morse Code memorized! ðŸ¤“
  </p>

  <p>The patterns below aim to use actual morse code letters wherever possible in order to accomplish a layout pattern.</p>

  <p>
    Where layout patterns don't have their own distinct letter we aimed to represent that pattern
    by a combination of dots-only and dashes-only letters (such as e, i, t, and m)
    except where this would lead to a three-letter combo.
  </p>

  <p>
    These layouts persist for tablet and desktop viewports,
    but for smartphone they will stack and flow with flexing elements filling the viewport
    and fixed elements lining up as long as space allows, wrapping otherwise.
  </p>

  <p><strong>Note:</strong> Elements shown here are merely demonstrations; any fixed or flexible units may be substituted.</p> 
  <div class="sage-panel-set">
    <% grid_patterns.each do | group | %>
      <div class="sage-panel sage-panel--docs-span-right">
        <h3><%= group[:group_name] %></h3>
        <ul class="sage-list">
          <% group[:members].each do | letter, code | %>
            <li>
              <h4 class="sage-panel__row sage-grid-template-a-u">
                <span style="width: 30px"><%= letter %></span>
                <code style="width: 80px"><%= code %></code>
                <code style="text-align: right">.sage-grid-template-<%= letter %></code>
              </h4>
              <div class="sage-card sage-card--row sage-grid-template-a-<%= letter %> sage-spacer-top-xs sage-spacer-bottom">
                <%
                  i_dashes = 0
                  i_dots = 0
                %>
                <% code.split("").each do | c | %>
                  <% if c == "-" %>
                    <%= dashes[i_dashes].html_safe %>
                    <% i_dashes += 1 %>
                  <% end %>
                  <% if c == "." %>
                    <%= dots[i_dots].html_safe %>
                    <% i_dots += 1 %>
                  <% end %>
                <% end %>
              </div>
            </li>
          <% end %>
        </ul>
      </div>
    <% end %>
  </div>
</div>
