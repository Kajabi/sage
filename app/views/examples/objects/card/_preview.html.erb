<h5>Basic Card</h5>
<%= render "examples/objects/card/markup",
  title: "Card heading",
  header_other: %(
    <button class="sage-btn sage-btn--tiny sage-btn--tertiary sage-btn--icon-only-info-circle">
      <span class="visually-hidden">Learn more</span>
    </button>
  ),
  body: %(
    <div class="sage-card__block">
      <p>
        This is a copy block. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        Nullam quis pretium massa. Maecenas posuere sapien in metus
        fermentum posuere.
      </p>
    </div>
  ),
  footer: %(
    <button class="sage-btn sage-btn--tertiary">
      Cancel
    </button>
    <button class="sage-btn sage-btn--primary">
      Save
    </button>
  ),
  footer_aligns_right: true
%>

<div class="sage-type sage-spacer-top sage-spacer-bottom">
  <p>Cards have three core areas:</p>
  <ul>
    <li>
      <strong>Header</strong> — 
      <code>.sage-card__header</code> 
      (optional) This area usually contains at least a title (<code>sage-card__title</code>)
      and often an icon or menu flanking the right corner.
      It employs the Sage Row layout base with <code>16px</code> gutters.
    </li>
    <li>
      <strong>Body</strong> —
      While there is no specific container for the body itself,
      there are a small set of containers that can be used to create a variety of simple internal layouts:
      <ul>
        <li>
          <strong><em>Block</em></strong> —
          <code>.sage-card__block</code>
          should be used to contain a set of text with no preset spacing or layout base desired.
          If the block contains open text that should conform to type spacing rules,
          <code>.sage-type</code> can be added.
        </li>
        <li>
          <strong><em>Stack</em></strong> —
          <code>.sage-card__stack</code>
          should be used to contain a simple stack of elements
          and employs the Sage Content Stack layout base.
        </li>
        <li>
          <strong><em>List</em></strong> —
          <code>.sage-card__list</code>
          should be used to contain a set of elements that
          adheres to standard list item styling.
          It thus employs the Sage List layout base with <code>16px</code> inline padding and <code>16px</code> gutters.
        </li>
        <li>
          <strong><em>Row</em></strong> —
          <code>.sage-card__row</code>
          should be used to contain a set of elements that line up side-by-side.
          It employs the Sage Row layout base with <code>16px</code> gutters.
          You can thus add one of the Grid Templates or provide a custom grid template when needed.
          <!-- TODO: Link to come once patterns are settled -->
        </li>
      </ul>
      Note: These can also be nested inside each other for compound configurations.
    </li>
    <li>
      <strong>Footer</strong> —
      <code>.sage-card__footer</code> 
      (optional) This area is less common in cards than on panels
      but when used it often contains one or more buttons
      that can be sent to the right edge of the card
      with the <code>sage-card__footer--align-right</code> modifier.
      It employs the Sage Row layout base with <code>16px</code> gutters.
    </li>
  </ul>
</div>

<h5>Card with stack and row blocks</h5>
<%= render "examples/objects/card/markup",
  body: %(
    <strong>Block:</strong>
    <div class="sage-card__block">
      <p>
        This is a copy block. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
        Nullam quis pretium massa. Maecenas posuere sapien in metus
        fermentum posuere.
      </p>
    </div>
    <strong>Stack:</strong>
    <ul class="sage-card__stack">
      <li class="t-sage-body-small">
        <i class="sage-icon-check t-sage--color-sage"></i>
        Stack items here.
      </li>
      <li class="t-sage-body-small">
        <i class="sage-icon-check t-sage--color-sage"></i>
        Another stack item here.
      </li>
    </ul>
    <strong>List:</strong>
    <ul class="sage-card__list">
      <li class="sage-card__list-item sage-card__row sage-grid-template-b-et">
        <i class="sage-icon-check t-sage--color-sage"></i>
        <span class="t-sage-body-small">Stack items here.</span>
      </li>
      <li class="sage-card__list-item sage-card__row sage-grid-template-b-et">
        <i class="sage-icon-check t-sage--color-sage"></i>
        <span class="t-sage-body-small">Another stack item here.</span>
      </li>
    </ul>
    <strong>Row:</strong>
    <div class="sage-card__row sage-grid-template-b-ete">
      <i class="sage-icon-drop" aria-label="Product"></i>
      <strong class="t-sage-body">
        Row here -- $8.99/mo
      </strong>
      <button class="sage-btn sage-btn--small sage-btn--primary sage-btn--icon-left-cart">Buy now</strong>
    </div>
  )
%>

<div class="sage-type sage-spacer-top sage-spacer-bottom">
  <h5>Card with a single body block</h5>
  <p>
    Cards with no header or footer and one outer body content type described above can be accomplished
    with just <code>.sage-card--{block|stack|list|row}</code> to simplify the containers needed. The example
    below depicts such a case where the card contains a single row. Note, however, that the row may
    contain other group types.
  </p>
</div>

<%= render "examples/objects/card/markup",
  single_block_type: "row",
  single_block_template: "ti",
  body: %(
    <div class="sage-card__block">
      <p class="t-sage-body-semi">
        daydreamsurfshop.com
      </p>
      <p class="t-sage-body-small t-sage--color-charcoal-200">
        Auto renews yearly on August 6th
      </p>
    </div>
    <p class="t-sage-body-semi t-sage--color-sage">First year free!</p>
    <p class="t-sage-heading-5 t-sage--color-grey-400 t-sage--strikethrough">$8.99</p>
  )
%>
