error_log stderr;

events {
  worker_connections 1024;
}

http {
  # Log format designed to mimic the Heroku router's log format
  log_format heroku_router '$time_iso8601 docker[router]: at=info method=$request_method '
                           'path=$uri host=$host request_id=$request_id fwd=$remote_addr '
                           'connect=$upstream_connect_time service=$request_time status=$status '
                           'byes=$upstream_bytes_sent protocol=$scheme';

  server {
    listen 80;
    server_name sage.test;
    proxy_read_timeout 100s;

    access_log /dev/stdout heroku_router;

    try_files $uri @sage;

    location @sage {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_set_header X-Request-Start $msec;
      proxy_set_header X-Request-Id $request_id;
      proxy_set_header Host $host;
      proxy_redirect off;

      resolver 127.0.0.11;
      set $upstream http://web:4000;
      proxy_pass $upstream;
    }
  }
}
